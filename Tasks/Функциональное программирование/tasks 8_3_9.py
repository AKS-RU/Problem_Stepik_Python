# –ê–ª–≥–æ—Ä–∏—Ç–º –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å
# –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å. –ï—Å–ª–∏ –Ω–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–æ–∑–≤–µ—Å—Ç–∏ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ ùëé –≤ —Å—Ç–µ–ø–µ–Ω—å ùëõ, –≥–¥–µ ùëõ ‚Äî –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ, –º—ã –º–æ–∂–µ–º —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏:
#
# –µ—Å–ª–∏ ùëõ —á–µ—Ç–Ω–æ–µ, —Ç–æ –º—ã –º–æ–∂–µ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç ùëé –≤ —Å—Ç–µ–ø–µ–Ω–∏ ùëõ –∫–∞–∫
#
# a**n = a**(n/2)*a**(n/2)=a**((n/2)**2)
#
# –µ—Å–ª–∏ ùëõ –Ω–µ—á–µ—Ç–Ω–æ–µ, —Ç–æ ùëé –≤ —Å—Ç–µ–ø–µ–Ω–∏ ùëõ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–∞–∫
#
# a**n = (a**(n-1))*a
#
# –ü—Ä–∏ —ç—Ç–æ–º  ùëõ‚àí1 –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Å—Ç–∞–Ω–µ—Ç —á–µ—Ç–Ω—ã–º —á–∏—Å–ª–æ–º –∏ —Ç–æ–≥–¥–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Ñ–æ—Ä–º—É–ª–æ–π –≤—ã—à–µ –¥–ª—è —á–µ—Ç–Ω—ã—Ö ùëõ.
# –ë–∞–∑–æ–≤—ã–º —Å–ª—É—á–∞–µ–º –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –±—É–¥–µ—Ç —è–≤–ª—è—Ç—å—Å—è –Ω—É–ª–µ–≤–∞—è —Å—Ç–µ–ø–µ–Ω—å —á–∏—Å–ª–∞. –õ—é–±–æ–µ —á–∏—Å–ª–æ –≤ –Ω—É–ª–µ–≤–æ–π —Å—Ç–µ–ø–µ–Ω–∏ —Ä–∞–≤–Ω–æ 1.
#
# –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é quick_power, –∫–æ—Ç–æ—Ä–∞—è —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å
#
# –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã –≤–∞—à–µ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ quick_power —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ a –∏ n  –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ
#
# State: a=<value>, n=<value>
# Sample Input 1:
#
# print(quick_power(3, 4))
# Sample Output 1:
#
# State: a=3, n=4
# State: a=3, n=2
# State: a=3, n=1
# State: a=3, n=0
# 81
# Sample Input 2:
#
# print(quick_power(2, 24))
# Sample Output 2:
#
# State: a=2, n=24
# State: a=2, n=12
# State: a=2, n=6
# State: a=2, n=3
# State: a=2, n=2
# State: a=2, n=1
# State: a=2, n=0
# 16777216
# Sample Input 3:
#
# print(quick_power(1, 1000))
# Sample Output 3:
#
# State: a=1, n=1000
# State: a=1, n=500
# State: a=1, n=250
# State: a=1, n=125
# State: a=1, n=124
# State: a=1, n=62
# State: a=1, n=31
# State: a=1, n=30
# State: a=1, n=15
# State: a=1, n=14
# State: a=1, n=7
# State: a=1, n=6
# State: a=1, n=3
# State: a=1, n=2
# State: a=1, n=1
# State: a=1, n=0
# 1


def quick_power(val, p):
    print(f'State: a={val}, n={int(p)}')
    if p<0:
        return quick_power(1 / val, -p)
    if p==0:
        return 1
    if p % 2 == 0:
        return quick_power(val, p / 2) ** 2
    else:
        return quick_power(val, p - 1) * val


print(quick_power(2, 24))
