# Социальные сети
# В социальных сетях все как обычно: одни люди выкладывают посты, другие их комментируют. Сервис по сбору аналитики
# решил найти у кого из владельцев постов самое большое количество уникальных комментаторов. Ваша задача помочь им в
# этом и собрать нужную информацию. Для это вам потребуется написать функцию print_statistic, которая принимает список
# кортежей. Каждый кортеж состоит из пары значений: автор поста и далее ник пользователя, оставившего комментарий к
# этому посту. Комментаторы могут повторяться и комментировать разных авторов.
#
# Функция print_statistic должна посчитать для каждого автора его уникальное количество комментаторов. Исходя из
# найденного количества  определяется популярность автора. Чем больше уникальных пользователей прокомментировало
# автора, тем он считается популярнее. Затем функция print_statistic должна для каждого автора вывести в порядке
# уменьшения популярности информацию в следующем виде
#
# "Количество уникальных комментаторов у <имя героя> - <количество комментаторов>"
# На склонение давайте не будем обращать внимание в этой задаче.
#
# В случае одинаковой популярности у нескольких авторов, необходимо ранжировать по алфавитному порядку имени авторов
# без учета регистра
#
# Sample Input 1:
#
# data = [
#     ('karl', 'makron78'),
#     ('karl', 'realdonaldtrump'),
#     ('qwery07', 'makron78'),
#     ('Billy', 'realdonaldtrump'),
#     ('Billy', 'realdonaldtrump'),
#     ('qwery07', 'joebiden'),
#     ('karl', 'joebiden'),
# ]
# print_statistic(data)
# Sample Output 1:
#
# Количество уникальных комментаторов у karl - 3
# Количество уникальных комментаторов у qwery07 - 2
# Количество уникальных комментаторов у Billy - 1
# Sample Input 2:
#
# data = [
#     ('karl', 'zhanna777'),
#     ('karl', 'мама_игоречка_98'),
#     ('qwerty03', 'pushka76'),
#     ('Billy', 'мама_игоречка_98'),
#     ('Billy', 'pushka76'),
#     ('qwerty03', 'joebiden'),
#     ('karl', 'zhanna777'),
#     ('karl', 'joebiden'),
#     ('karl', 'pushka76'),
# ]
#
# print_statistic(data)
# Sample Output 2:
#
# Количество уникальных комментаторов у karl - 4
# Количество уникальных комментаторов у Billy - 2
# Количество уникальных комментаторов у qwerty03 - 2
# Sample Input 3:
#
# data = [
#     ('7', 'opushka'),
#     ('1', 'opushka'),
#     ('2', 'opushka'),
#     ('3', 'opushka'),
#     ('2', 'opushka'),
#     ('1', 'opushka'),
#     ('2', 'opushka'),
#     ('5', 'opushka'),
#     ('6', 'opushka'),
#     ('6', 'opushka'),
# ]
#
# print_statistic(data)
# Sample Output 3:
#
# Количество уникальных комментаторов у 1 - 1
# Количество уникальных комментаторов у 2 - 1
# Количество уникальных комментаторов у 3 - 1
# Количество уникальных комментаторов у 5 - 1
# Количество уникальных комментаторов у 6 - 1
# Количество уникальных комментаторов у 7 - 1

def print_statistic(lst: list):
    # result = {k: set() for k, v in lst}
    result={}
    for k, v in lst:
        result.setdefault(k, set()).add(v)
        # result[k].add(v)
    [print(f'Количество уникальных комментаторов у {k} - {len(result[k])}') for k, v in
     sorted(result.items(), key=lambda x: (-len(x[1]), x[0].lower()))]


data = [
    ('karl', 'makron78'),
    ('karl', 'realdonaldtrump'),
    ('qwery07', 'makron78'),
    ('Billy', 'realdonaldtrump'),
    ('Billy', 'realdonaldtrump'),
    ('qwery07', 'joebiden'),
    ('karl', 'joebiden'),
]
print_statistic(data)

# result = {k:set() for k, v in data}
# for k, v in data:
#     result[k].add(v)
# [print(f'Количество уникальных комментаторов у {k} - {len(result[k])}') for k, v in sorted(result.items(), key=lambda x: (-len(x[1]), x[0].lower()))]

# print(result, type(result))